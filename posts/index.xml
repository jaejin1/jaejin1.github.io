<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - </title>
        <link>http://example.org/posts/</link>
        <description>All Posts | </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>opiximeo@gmail.com (jaejin)</managingEditor>
            <webMaster>opiximeo@gmail.com (jaejin)</webMaster><lastBuildDate>Sun, 19 Feb 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://example.org/posts/" rel="self" type="application/rss+xml" /><item>
    <title>[Leetcode] 11. Container With Most Water</title>
    <link>http://example.org/container-with-most-water/</link>
    <pubDate>Sun, 19 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://example.org/container-with-most-water/</guid>
    <description><![CDATA[<p><a href="https://leetcode.com/problems/container-with-most-water/description/">https://leetcode.com/problems/container-with-most-water/description/</a></p>]]></description>
</item><item>
    <title>[Leetcode] 15. 3Sum</title>
    <link>http://example.org/3sum/</link>
    <pubDate>Sun, 19 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://example.org/3sum/</guid>
    <description><![CDATA[<p><a href="https://leetcode.com/problems/3sum/description/">https://leetcode.com/problems/3sum/description/</a></p>]]></description>
</item><item>
    <title>[Leetcode] 17. Letter Combinations of a Phone Number</title>
    <link>http://example.org/letter-combinations-of-a-phone-number/</link>
    <pubDate>Sun, 19 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://example.org/letter-combinations-of-a-phone-number/</guid>
    <description><![CDATA[<p><a href="https://leetcode.com/problems/letter-combinations-of-a-phone-number/description/">https://leetcode.com/problems/letter-combinations-of-a-phone-number/description/</a></p>]]></description>
</item><item>
    <title>API Gateway Authorizer</title>
    <link>http://example.org/api-gateway-authorizer/</link>
    <pubDate>Sun, 05 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://example.org/api-gateway-authorizer/</guid>
    <description><![CDATA[<p>AWS Lambda로 끄적이다가 API Gateway를 붙여보자! 해서 보던 중 API Gateway는 인증 및 권한부여 기능을 제공 해주고 있었고 그 중 Authorizers의 존재를 봐서 api를 위한 Lambda 호출 전에 인증을 위한 Lambda를 호출 하는 것을 구성해봤다.</p>]]></description>
</item><item>
    <title>JWT signing using AWS KMS</title>
    <link>http://example.org/jwt-signing-using-aws-kms/</link>
    <pubDate>Sat, 14 Jan 2023 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://example.org/jwt-signing-using-aws-kms/</guid>
    <description><![CDATA[<p>JWT 인증을 AWS KMS에서 key를 생성하여 이를 이용하여 token을 발급 받고 인증하는 것을 구현해보자</p>]]></description>
</item><item>
    <title>Retry patterns과 aws sdk waiters</title>
    <link>http://example.org/retry-patterns/</link>
    <pubDate>Sun, 08 Jan 2023 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://example.org/retry-patterns/</guid>
    <description><![CDATA[<p>어플리케이션이 어떤 작업을 시도할 때 실패하게 되면 오류가 일시적인 부분이 많아 다시 요청을 하는 것이 좋다고 생각한다.</p>
<p>그에 따라 retry patterns라고 불리는 것들이 있었고 이를 정리해보려고 한다.</p>]]></description>
</item><item>
    <title>ASG Lifecycle Hook</title>
    <link>http://example.org/asg-lifecycle-hook/</link>
    <pubDate>Sat, 07 Jan 2023 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://example.org/asg-lifecycle-hook/</guid>
    <description><![CDATA[<p>AWS Auto Scaling은 Lifecyle을 추가할 수 있는 기능을 제공한다.</p>
<p>Lifecycle 이벤트가 발생할 때 인스턴스에 대한 사용자 정의 작업을 수행할 수 있다.</p>]]></description>
</item><item>
    <title>Service Discovery Pattern</title>
    <link>http://example.org/service-discovery-pattern/</link>
    <pubDate>Sat, 07 Jan 2023 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://example.org/service-discovery-pattern/</guid>
    <description><![CDATA[<p>MSA와 같은 분산 환경은 서비스간 원격 호출로 구성이 되고 IP와 Posrt를 이용하여 호출한다.</p>
<p>Cloud 환경에서의 인스턴스를 구축할 때 AutoScaling등으로 인한 IP, Port가 동적으로 변경될 일이 많다.</p>
<p>그래서 Client가 호출할 때 서비스 위치 (IP, Port)를 알아 낼 수 있는 기능이 필요한데, 이것을 Service Discovery라고 한다.</p>]]></description>
</item><item>
    <title>docker file system</title>
    <link>http://example.org/docker-filesystem/</link>
    <pubDate>Mon, 16 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://example.org/docker-filesystem/</guid>
    <description><![CDATA[<p>docker에서 사용하고 있는 Union File System<code>(UFS)</code>에 대해 이해해보자.</p>
<p>UFS는 쉽게 여러 개의 File System을 하나로 결합하여 취급할 수 있도록 해주는 FS라 보면 된다.</p>]]></description>
</item><item>
    <title>tty</title>
    <link>http://example.org/tty/</link>
    <pubDate>Mon, 28 Jun 2021 13:58:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://example.org/tty/</guid>
    <description><![CDATA[<p>리눅스의 <code>/dev</code> 디렉토리에서 볼 수 있는 <code>/dev/tty*</code>, <code>/dev/pts/*</code> 파일들이 입출력에 관련된 파일들이며 외부 터미널 장치를 연결할 때, 리눅스에서 가상콘솔을 제공할 때 xterm이나 telnet, ssh 같은 리모트 로그인 프로그램등에 의해 사용된다.</p>]]></description>
</item></channel>
</rss>
